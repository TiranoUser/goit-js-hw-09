{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,mBAKxC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZMN,SAASC,cAAc,QAC/Ba,iBAAiB,UAetB,SAAoBC,GAClBA,EAAMC,iBAKN,IAJA,IAAMC,EAASC,OAAOf,EAASgB,OAC3BC,EAAQF,OAAOnB,EAAaoB,OAC1BE,EAAOH,OAAOhB,EAAYiB,OAC5BG,EAAW,EACNC,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BnB,EAAckB,EAAUF,GACrBI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBT,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAC3DuB,QAAMC,IAAI,uBAAwCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DyB,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBT,EAAA6B,OAAOM,QAAQ,sBAAuCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAE1DuB,QAAMC,IAAI,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DgB,GAAY,EACZF,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst delayStepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', formSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  const amount = Number(amountEl.value);\n  let delay = Number(firstDelayEl.value);\n  const step = Number(delayStepEl.value);\n  let position = 1;\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    position += 1;\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayEl","document","querySelector","$ce04d3a99e08e73b$var$delayStepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","Number","value","delay1","step","position1","i","then","param","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.20ffc8f8.js.map"}